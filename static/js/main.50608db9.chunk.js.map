{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","App","NONE","useState","setSortType","setReverse","className","onClick","classNames","type","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASK,SAASC,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAM7C,OAAOR,EAAaC,EAAaQ,UAAYR,G,SAxB1CN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2BE,IAAMe,EAAgB,WAC3B,IAAQC,EAA2BhB,EAA3BgB,KAAMT,EAAqBP,EAArBO,SAAUK,EAAWZ,EAAXY,OACxB,EAAgCK,mBAAS,GAAzC,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAiCD,oBAAS,GAA1C,mBAAOZ,EAAP,KAAmBc,EAAnB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMH,EAAY,IAC3BE,UAAWE,IAAW,iBAAkB,CACtC,WAAYlB,IAAaG,IAE3BgB,KAAK,SALP,iCAUA,wBACEF,QAAS,kBAAMH,EAAY,IAC3BE,UAAWE,IAAW,iBAAkB,CACtC,WAAYlB,IAAaQ,IAE3BW,KAAK,SALP,4BAUA,wBACEF,QAAS,kBAAMF,GAAYd,IAC3Be,UAAWE,IAAW,oBAAqB,CACzC,YAAajB,IAEfkB,KAAK,SALP,sBAUEnB,IAAaY,GAAQX,IACrB,wBACEkB,KAAK,SACLH,UAAU,4BACVC,QAAS,WACPH,EAAY,GACZC,GAAW,IALf,sBAaJ,6BACGjB,EAAkBD,EAAiBG,EAAUC,GAAYmB,KAAI,SAAAC,GAAI,OAChE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YChGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50608db9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const { NONE, ALPHABET, LENGTH } = SortType;\n  const [sortType, setSortType] = useState(0);\n  const [isReversed, setReverse] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(1)}\n          className={classNames('button is-info', {\n            'is-light': sortType !== ALPHABET,\n          })}\n          type=\"button\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(2)}\n          className={classNames('button is-info', {\n            'is-light': sortType !== LENGTH,\n          })}\n          type=\"button\"\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(!isReversed)}\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          type=\"button\"\n        >\n          Reverse\n        </button>\n\n        {(sortType !== NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(0);\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, sortType, isReversed).map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}