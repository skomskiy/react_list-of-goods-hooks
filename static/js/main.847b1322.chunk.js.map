{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","localeCompare","length","reverse","App","useState","setType","setReverse","className","onClick","classNames","type","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGK,SAASC,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAEzB,OAAQC,GACN,IAAK,WACHE,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,IAAK,SACHH,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAM7C,OAAON,EAAaC,EAAaM,UAAYN,EAGxC,IAAMO,EAAgB,WAC3B,MAA4BC,mBAAS,QAArC,mBAAOV,EAAP,KAAiBW,EAAjB,KACA,EAAiCD,oBAAS,GAA1C,mBAAOT,EAAP,KAAmBW,EAAnB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMH,EAAQ,aACvBE,UACEE,IAAW,iBAAkB,CAC3B,WAAyB,aAAbf,IAGhBgB,KAAK,SAPP,iCAYA,wBACEF,QAAS,kBAAMH,EAAQ,WACvBE,UACEE,IAAW,iBAAkB,CAC3B,WAAyB,WAAbf,IAGhBgB,KAAK,SAPP,4BAYA,wBACEF,QAAS,kBAAMF,GAAYX,IAC3BY,UACEE,IAAW,oBAAqB,CAC9B,YAAad,IAGjBe,KAAK,SAPP,qBAYc,SAAbhB,GAAuBC,EACtB,wBACEe,KAAK,SACLH,UAAU,4BACVC,QAAS,WAEP,OAAOH,EAAQ,QAASC,GAAW,IALvC,mBAUE,MAGN,6BACGd,EAAkBD,EAAiBG,EAAUC,GAAYgB,KAAI,SAAAC,GAAI,OAChE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC/FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.847b1322.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: string,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 'alphabet':\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case 'lenght':\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setType] = useState('none');\n  const [isReversed, setReverse] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setType('alphabet')}\n          className={\n            classNames('button is-info', {\n              'is-light': sortType !== 'alphabet',\n            })\n          }\n          type=\"button\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setType('lenght')}\n          className={\n            classNames('button is-info', {\n              'is-light': sortType !== 'lenght',\n            })\n          }\n          type=\"button\"\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(!isReversed)}\n          className={\n            classNames('button is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n          type=\"button\"\n        >\n          Reverse\n        </button>\n\n        {sortType !== 'none' || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              // eslint-disable-next-line no-sequences\n              return setType('none'), setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        ) : ''}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, sortType, isReversed).map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}